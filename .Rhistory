polygon(c(d$Day, rev(d$Day)),
pmax(0, c(tmp1+sdt, rev(tmp1-sdt))), border = NA, col=adjustcolor(1, 0.5))
lines(d$Day, tmp1, lwd=2)
mtext("Time (Days)", side = 1, line=2.4)
mtext("Std. Abundance", side = 2, line=2.4)
abline(h=1, lty=2)
plot(d$Std_Volume, sm_full$smap_coefficients[[1]][-1,3], xlab = "", ylab = "")
mtext("Std. Abundance", side = 1, line=2.4)
mtext(expression(paste(italic(X)[italic(t),1])), side = 2, line=2.4)
x = d$Day
tmp2 = sm_full$smap_coefficients[[1]][-1,3]
mod = loess(tmp2~tmp1, enp.target = 0.5)
lines(tmp1, predict(mod), lwd=2)
abline(h=0, v=0, lty=3)
abline(v = 1, lty=2)
require(gauseR)
require(rEDM)
data(gause_1934_science_f02_03)
d = gause_1934_science_f02_03[gause_1934_science_f02_03$Treatment=="Pa",]
d = d[,c("Day", "Volume_Species2")]
d[,2] = d[,2]/mean(d[,2])/1.44
colnames(d) = c("Day", "Std_Volume")
sm = s_map(d$Std_Volume, E=1)
#plot(sm$theta, sm$rho)
theta = 3# sm$theta[which.max(sm$rho)]
sm_full = s_map(d$Std_Volume, E=1, theta = theta, save_smap_coefficients = TRUE, stats_only = FALSE)
par(mfrow=c(2,1), mar=c(4,4,1,1))
plot(d$Day, d$Std_Volume, xlab = "", ylab = "")
tmp1 = c(d$Std_Volume[1],sm_full$model_output[[1]]$Predictions[-c(1, length(sm_full$model_output[[1]]$Predictions))])
sdt = c(0,sqrt(sm_full$model_output[[1]]$Pred_Variance[-c(1, length(sm_full$model_output[[1]]$Predictions))]))
polygon(c(d$Day, rev(d$Day)),
pmax(0, c(tmp1+sdt, rev(tmp1-sdt))), border = NA, col=adjustcolor(1, 0.5))
lines(d$Day, tmp1, lwd=2)
mtext("Time (Days)", side = 1, line=2.4)
mtext("Std. Abundance", side = 2, line=2.4)
abline(h=1, lty=2)
plot(d$Std_Volume, sm_full$smap_coefficients[[1]][-1,3], xlab = "", ylab = "")
mtext("Std. Abundance", side = 1, line=2.4)
mtext(expression(paste(italic(X)[italic(t),1])), side = 2, line=2.4)
x = d$Day
tmp2 = sm_full$smap_coefficients[[1]][-1,3]
mod = loess(tmp2~tmp1, enp.target = 0.5)
lines(tmp1, predict(mod), lwd=2)
abline(h=0, v=0, lty=3)
abline(v = 1, lty=2)
require(gauseR)
require(rEDM)
data(gause_1934_science_f02_03)
d = gause_1934_science_f02_03[gause_1934_science_f02_03$Treatment=="Pa",]
d = d[,c("Day", "Volume_Species2")]
d[,2] = d[,2]/mean(d[,2])/1.9
colnames(d) = c("Day", "Std_Volume")
sm = s_map(d$Std_Volume, E=1)
#plot(sm$theta, sm$rho)
theta = 3# sm$theta[which.max(sm$rho)]
sm_full = s_map(d$Std_Volume, E=1, theta = theta, save_smap_coefficients = TRUE, stats_only = FALSE)
par(mfrow=c(2,1), mar=c(4,4,1,1))
plot(d$Day, d$Std_Volume, xlab = "", ylab = "")
tmp1 = c(d$Std_Volume[1],sm_full$model_output[[1]]$Predictions[-c(1, length(sm_full$model_output[[1]]$Predictions))])
sdt = c(0,sqrt(sm_full$model_output[[1]]$Pred_Variance[-c(1, length(sm_full$model_output[[1]]$Predictions))]))
polygon(c(d$Day, rev(d$Day)),
pmax(0, c(tmp1+sdt, rev(tmp1-sdt))), border = NA, col=adjustcolor(1, 0.5))
lines(d$Day, tmp1, lwd=2)
mtext("Time (Days)", side = 1, line=2.4)
mtext("Std. Abundance", side = 2, line=2.4)
abline(h=1, lty=2)
plot(d$Std_Volume, sm_full$smap_coefficients[[1]][-1,3], xlab = "", ylab = "")
mtext("Std. Abundance", side = 1, line=2.4)
mtext(expression(paste(italic(X)[italic(t),1])), side = 2, line=2.4)
x = d$Day
tmp2 = sm_full$smap_coefficients[[1]][-1,3]
mod = loess(tmp2~tmp1, enp.target = 0.5)
lines(tmp1, predict(mod), lwd=2)
abline(h=0, v=0, lty=3)
abline(v = 1, lty=2)
require(gauseR)
require(rEDM)
data(gause_1934_science_f02_03)
d = gause_1934_science_f02_03[gause_1934_science_f02_03$Treatment=="Pa",]
d = d[,c("Day", "Volume_Species2")]
d[,2] = d[,2]/mean(d[,2])/1.1
colnames(d) = c("Day", "Std_Volume")
sm = s_map(d$Std_Volume, E=1)
#plot(sm$theta, sm$rho)
theta = 3# sm$theta[which.max(sm$rho)]
sm_full = s_map(d$Std_Volume, E=1, theta = theta, save_smap_coefficients = TRUE, stats_only = FALSE)
par(mfrow=c(2,1), mar=c(4,4,1,1))
plot(d$Day, d$Std_Volume, xlab = "", ylab = "")
tmp1 = c(d$Std_Volume[1],sm_full$model_output[[1]]$Predictions[-c(1, length(sm_full$model_output[[1]]$Predictions))])
sdt = c(0,sqrt(sm_full$model_output[[1]]$Pred_Variance[-c(1, length(sm_full$model_output[[1]]$Predictions))]))
polygon(c(d$Day, rev(d$Day)),
pmax(0, c(tmp1+sdt, rev(tmp1-sdt))), border = NA, col=adjustcolor(1, 0.5))
lines(d$Day, tmp1, lwd=2)
mtext("Time (Days)", side = 1, line=2.4)
mtext("Std. Abundance", side = 2, line=2.4)
abline(h=1, lty=2)
plot(d$Std_Volume, sm_full$smap_coefficients[[1]][-1,3], xlab = "", ylab = "")
mtext("Std. Abundance", side = 1, line=2.4)
mtext(expression(paste(italic(X)[italic(t),1])), side = 2, line=2.4)
x = d$Day
tmp2 = sm_full$smap_coefficients[[1]][-1,3]
mod = loess(tmp2~tmp1, enp.target = 0.5)
lines(tmp1, predict(mod), lwd=2)
abline(h=0, v=0, lty=3)
abline(v = 1, lty=2)
require(gauseR)
require(rEDM)
data(gause_1934_science_f02_03)
d = gause_1934_science_f02_03[gause_1934_science_f02_03$Treatment=="Pa",]
d = d[,c("Day", "Volume_Species2")]
d[,2] = d[,2]/mean(d[,2])/1.2
colnames(d) = c("Day", "Std_Volume")
sm = s_map(d$Std_Volume, E=1)
#plot(sm$theta, sm$rho)
theta = 3# sm$theta[which.max(sm$rho)]
sm_full = s_map(d$Std_Volume, E=1, theta = theta, save_smap_coefficients = TRUE, stats_only = FALSE)
par(mfrow=c(2,1), mar=c(4,4,1,1))
plot(d$Day, d$Std_Volume, xlab = "", ylab = "")
tmp1 = c(d$Std_Volume[1],sm_full$model_output[[1]]$Predictions[-c(1, length(sm_full$model_output[[1]]$Predictions))])
sdt = c(0,sqrt(sm_full$model_output[[1]]$Pred_Variance[-c(1, length(sm_full$model_output[[1]]$Predictions))]))
polygon(c(d$Day, rev(d$Day)),
pmax(0, c(tmp1+sdt, rev(tmp1-sdt))), border = NA, col=adjustcolor(1, 0.5))
lines(d$Day, tmp1, lwd=2)
mtext("Time (Days)", side = 1, line=2.4)
mtext("Std. Abundance", side = 2, line=2.4)
abline(h=1, lty=2)
plot(d$Std_Volume, sm_full$smap_coefficients[[1]][-1,3], xlab = "", ylab = "")
mtext("Std. Abundance", side = 1, line=2.4)
mtext(expression(paste(italic(X)[italic(t),1])), side = 2, line=2.4)
x = d$Day
tmp2 = sm_full$smap_coefficients[[1]][-1,3]
mod = loess(tmp2~tmp1, enp.target = 0.5)
lines(tmp1, predict(mod), lwd=2)
abline(h=0, v=0, lty=3)
abline(v = 1, lty=2)
require(gauseR)
require(rEDM)
data(gause_1934_science_f02_03)
d = gause_1934_science_f02_03[gause_1934_science_f02_03$Treatment=="Pa",]
d = d[,c("Day", "Volume_Species2")]
d[,2] = d[,2]/mean(d[,2])/1.4
colnames(d) = c("Day", "Std_Volume")
sm = s_map(d$Std_Volume, E=1)
#plot(sm$theta, sm$rho)
theta = 3# sm$theta[which.max(sm$rho)]
sm_full = s_map(d$Std_Volume, E=1, theta = theta, save_smap_coefficients = TRUE, stats_only = FALSE)
par(mfrow=c(2,1), mar=c(4,4,1,1))
plot(d$Day, d$Std_Volume, xlab = "", ylab = "")
tmp1 = c(d$Std_Volume[1],sm_full$model_output[[1]]$Predictions[-c(1, length(sm_full$model_output[[1]]$Predictions))])
sdt = c(0,sqrt(sm_full$model_output[[1]]$Pred_Variance[-c(1, length(sm_full$model_output[[1]]$Predictions))]))
polygon(c(d$Day, rev(d$Day)),
pmax(0, c(tmp1+sdt, rev(tmp1-sdt))), border = NA, col=adjustcolor(1, 0.5))
lines(d$Day, tmp1, lwd=2)
mtext("Time (Days)", side = 1, line=2.4)
mtext("Std. Abundance", side = 2, line=2.4)
abline(h=1, lty=2)
plot(d$Std_Volume, sm_full$smap_coefficients[[1]][-1,3], xlab = "", ylab = "")
mtext("Std. Abundance", side = 1, line=2.4)
mtext(expression(paste(italic(X)[italic(t),1])), side = 2, line=2.4)
x = d$Day
tmp2 = sm_full$smap_coefficients[[1]][-1,3]
mod = loess(tmp2~tmp1, enp.target = 0.5)
lines(tmp1, predict(mod), lwd=2)
abline(h=0, v=0, lty=3)
abline(v = 1, lty=2)
require(gauseR)
require(rEDM)
data(gause_1934_science_f02_03)
d = gause_1934_science_f02_03[gause_1934_science_f02_03$Treatment=="Pa",]
d = d[,c("Day", "Volume_Species2")]
d[,2] = d[,2]/mean(d[,2])/1.45
colnames(d) = c("Day", "Std_Volume")
sm = s_map(d$Std_Volume, E=1)
#plot(sm$theta, sm$rho)
theta = 3# sm$theta[which.max(sm$rho)]
sm_full = s_map(d$Std_Volume, E=1, theta = theta, save_smap_coefficients = TRUE, stats_only = FALSE)
par(mfrow=c(2,1), mar=c(4,4,1,1))
plot(d$Day, d$Std_Volume, xlab = "", ylab = "")
tmp1 = c(d$Std_Volume[1],sm_full$model_output[[1]]$Predictions[-c(1, length(sm_full$model_output[[1]]$Predictions))])
sdt = c(0,sqrt(sm_full$model_output[[1]]$Pred_Variance[-c(1, length(sm_full$model_output[[1]]$Predictions))]))
polygon(c(d$Day, rev(d$Day)),
pmax(0, c(tmp1+sdt, rev(tmp1-sdt))), border = NA, col=adjustcolor(1, 0.5))
lines(d$Day, tmp1, lwd=2)
mtext("Time (Days)", side = 1, line=2.4)
mtext("Std. Abundance", side = 2, line=2.4)
abline(h=1, lty=2)
plot(d$Std_Volume, sm_full$smap_coefficients[[1]][-1,3], xlab = "", ylab = "")
mtext("Std. Abundance", side = 1, line=2.4)
mtext(expression(paste(italic(X)[italic(t),1])), side = 2, line=2.4)
x = d$Day
tmp2 = sm_full$smap_coefficients[[1]][-1,3]
mod = loess(tmp2~tmp1, enp.target = 0.5)
lines(tmp1, predict(mod), lwd=2)
abline(h=0, v=0, lty=3)
abline(v = 1, lty=2)
png("~/Dropbox/Projects/085_ERC_SG/noodling/b2/edm_example.png", width=3, height=4, units = "in", res = 200)
require(gauseR)
require(rEDM)
data(gause_1934_science_f02_03)
d = gause_1934_science_f02_03[gause_1934_science_f02_03$Treatment=="Pa",]
d = d[,c("Day", "Volume_Species2")]
d[,2] = d[,2]/mean(d[,2])/1.45
colnames(d) = c("Day", "Std_Volume")
sm = s_map(d$Std_Volume, E=1)
#plot(sm$theta, sm$rho)
theta = 3# sm$theta[which.max(sm$rho)]
sm_full = s_map(d$Std_Volume, E=1, theta = theta, save_smap_coefficients = TRUE, stats_only = FALSE)
png("~/Dropbox/Projects/085_ERC_SG/noodling/b2/edm_example.png", width=3, height=4, units = "in", res = 200)
par(mfrow=c(2,1), mar=c(4,4,1,1))
plot(d$Day, d$Std_Volume, xlab = "", ylab = "")
tmp1 = c(d$Std_Volume[1],sm_full$model_output[[1]]$Predictions[-c(1, length(sm_full$model_output[[1]]$Predictions))])
sdt = c(0,sqrt(sm_full$model_output[[1]]$Pred_Variance[-c(1, length(sm_full$model_output[[1]]$Predictions))]))
polygon(c(d$Day, rev(d$Day)),
pmax(0, c(tmp1+sdt, rev(tmp1-sdt))), border = NA, col=adjustcolor(1, 0.5))
lines(d$Day, tmp1, lwd=2)
mtext("Time (Days)", side = 1, line=2.4)
mtext("Std. Abundance", side = 2, line=2.4)
abline(h=1, lty=2)
plot(d$Std_Volume, sm_full$smap_coefficients[[1]][-1,3], xlab = "", ylab = "")
mtext("Std. Abundance", side = 1, line=2.4)
mtext(expression(paste(italic(X)[italic(t),1])), side = 2, line=2.4)
x = d$Day
tmp2 = sm_full$smap_coefficients[[1]][-1,3]
mod = loess(tmp2~tmp1, enp.target = 0.5)
lines(tmp1, predict(mod), lwd=2)
abline(h=0, v=0, lty=3)
abline(v = 1, lty=2)
dev.off()
require(gauseR)
require(rEDM)
data(gause_1934_science_f02_03)
d = gause_1934_science_f02_03[gause_1934_science_f02_03$Treatment=="Pa",]
d = d[,c("Day", "Volume_Species2")]
d[,2] = d[,2]/mean(d[,2])/1.45
colnames(d) = c("Day", "Std_Volume")
sm = s_map(d$Std_Volume, E=1)
#plot(sm$theta, sm$rho)
theta = 3# sm$theta[which.max(sm$rho)]
sm_full = s_map(d$Std_Volume, E=1, theta = theta, save_smap_coefficients = TRUE, stats_only = FALSE)
png("~/Dropbox/Projects/085_ERC_SG/noodling/b2/edm_example.png", width=3, height=4, units = "in", res = 200)
par(mfrow=c(2,1), mar=c(4,4,1,1))
plot(d$Day, d$Std_Volume, xlab = "", ylab = "")
tmp1 = c(d$Std_Volume[1],sm_full$model_output[[1]]$Predictions[-c(1, length(sm_full$model_output[[1]]$Predictions))])
sdt = c(0,sqrt(sm_full$model_output[[1]]$Pred_Variance[-c(1, length(sm_full$model_output[[1]]$Predictions))]))
polygon(c(d$Day, rev(d$Day)),
pmax(0, c(tmp1+sdt, rev(tmp1-sdt))), border = NA, col=adjustcolor(1, 0.5))
lines(d$Day, tmp1, lwd=2)
mtext("Time (Days)", side = 1, line=2.4)
mtext("Std. Abundance", side = 2, line=2.4)
abline(h=1, lty=2)
abline(h=0, v=0, lty=3)
plot(d$Std_Volume, sm_full$smap_coefficients[[1]][-1,3], xlab = "", ylab = "")
mtext("Std. Abundance", side = 1, line=2.4)
mtext(expression(paste(italic(X)[italic(t),1])), side = 2, line=2.4)
x = d$Day
tmp2 = sm_full$smap_coefficients[[1]][-1,3]
mod = loess(tmp2~tmp1, enp.target = 0.5)
lines(tmp1, predict(mod), lwd=2)
abline(h=0, v=0, lty=3)
abline(v = 1, lty=2)
dev.off()
require(gauseR)
require(rEDM)
data(gause_1934_science_f02_03)
d = gause_1934_science_f02_03[gause_1934_science_f02_03$Treatment=="Pa",]
d = d[,c("Day", "Volume_Species2")]
d[,2] = d[,2]/mean(d[,2])/1.45
colnames(d) = c("Day", "Std_Volume")
sm = s_map(d$Std_Volume, E=1)
#plot(sm$theta, sm$rho)
theta = 3# sm$theta[which.max(sm$rho)]
sm_full = s_map(d$Std_Volume, E=1, theta = theta, save_smap_coefficients = TRUE, stats_only = FALSE)
png("~/Dropbox/Projects/085_ERC_SG/noodling/b2/edm_example.png", width=3, height=4, units = "in", res = 200)
par(mfrow=c(2,1), mar=c(3,3,.5,.5))
plot(d$Day, d$Std_Volume, xlab = "", ylab = "")
tmp1 = c(d$Std_Volume[1],sm_full$model_output[[1]]$Predictions[-c(1, length(sm_full$model_output[[1]]$Predictions))])
sdt = c(0,sqrt(sm_full$model_output[[1]]$Pred_Variance[-c(1, length(sm_full$model_output[[1]]$Predictions))]))
polygon(c(d$Day, rev(d$Day)),
pmax(0, c(tmp1+sdt, rev(tmp1-sdt))), border = NA, col=adjustcolor(1, 0.5))
lines(d$Day, tmp1, lwd=2)
mtext("Time (Days)", side = 1, line=2.4)
mtext("Std. Abundance", side = 2, line=2.4)
abline(h=1, lty=2)
abline(h=0, v=0, lty=3)
plot(d$Std_Volume, sm_full$smap_coefficients[[1]][-1,3], xlab = "", ylab = "")
mtext("Std. Abundance", side = 1, line=2.4)
mtext(expression(paste(italic(X)[italic(t),1])), side = 2, line=2.4)
x = d$Day
tmp2 = sm_full$smap_coefficients[[1]][-1,3]
mod = loess(tmp2~tmp1, enp.target = 0.5)
lines(tmp1, predict(mod), lwd=2)
abline(h=0, v=0, lty=3)
abline(v = 1, lty=2)
dev.off()
require(gauseR)
require(rEDM)
data(gause_1934_science_f02_03)
d = gause_1934_science_f02_03[gause_1934_science_f02_03$Treatment=="Pa",]
d = d[,c("Day", "Volume_Species2")]
d[,2] = d[,2]/mean(d[,2])/1.45
colnames(d) = c("Day", "Std_Volume")
sm = s_map(d$Std_Volume, E=1)
#plot(sm$theta, sm$rho)
theta = 3# sm$theta[which.max(sm$rho)]
sm_full = s_map(d$Std_Volume, E=1, theta = theta, save_smap_coefficients = TRUE, stats_only = FALSE)
png("~/Dropbox/Projects/085_ERC_SG/noodling/b2/edm_example.png", width=3, height=4, units = "in", res = 200)
par(mfrow=c(2,1), mar=c(4,4,.5,.5))
plot(d$Day, d$Std_Volume, xlab = "", ylab = "")
tmp1 = c(d$Std_Volume[1],sm_full$model_output[[1]]$Predictions[-c(1, length(sm_full$model_output[[1]]$Predictions))])
sdt = c(0,sqrt(sm_full$model_output[[1]]$Pred_Variance[-c(1, length(sm_full$model_output[[1]]$Predictions))]))
polygon(c(d$Day, rev(d$Day)),
pmax(0, c(tmp1+sdt, rev(tmp1-sdt))), border = NA, col=adjustcolor(1, 0.5))
lines(d$Day, tmp1, lwd=2)
mtext("Time (Days)", side = 1, line=2.4)
mtext("Std. Abundance", side = 2, line=2.4)
abline(h=1, lty=2)
abline(h=0, v=0, lty=3)
plot(d$Std_Volume, sm_full$smap_coefficients[[1]][-1,3], xlab = "", ylab = "")
mtext("Std. Abundance", side = 1, line=2.4)
mtext(expression(paste(italic(X)[italic(t),1])), side = 2, line=2.4)
x = d$Day
tmp2 = sm_full$smap_coefficients[[1]][-1,3]
mod = loess(tmp2~tmp1, enp.target = 0.5)
lines(tmp1, predict(mod), lwd=2)
abline(h=0, v=0, lty=3)
abline(v = 1, lty=2)
dev.off()
require(gauseR)
require(rEDM)
data(gause_1934_science_f02_03)
d = gause_1934_science_f02_03[gause_1934_science_f02_03$Treatment=="Pa",]
d = d[,c("Day", "Volume_Species2")]
d[,2] = d[,2]/mean(d[,2])/1.45
colnames(d) = c("Day", "Std_Volume")
sm = s_map(d$Std_Volume, E=1)
#plot(sm$theta, sm$rho)
theta = 3# sm$theta[which.max(sm$rho)]
sm_full = s_map(d$Std_Volume, E=1, theta = theta, save_smap_coefficients = TRUE, stats_only = FALSE)
png("~/Dropbox/Projects/085_ERC_SG/noodling/b2/edm_example.png", width=3, height=4, units = "in", res = 200)
par(mfrow=c(2,1), mar=c(4,4,.5,.5))
plot(d$Day, d$Std_Volume, xlab = "", ylab = "")
tmp1 = c(d$Std_Volume[1],sm_full$model_output[[1]]$Predictions[-c(1, length(sm_full$model_output[[1]]$Predictions))])
sdt = c(0,sqrt(sm_full$model_output[[1]]$Pred_Variance[-c(1, length(sm_full$model_output[[1]]$Predictions))]))
polygon(c(d$Day, rev(d$Day)),
pmax(0, c(tmp1+sdt, rev(tmp1-sdt))), border = NA, col=adjustcolor(1, 0.5))
lines(d$Day, tmp1, lwd=2)
mtext("Time (Days)", side = 1, line=2.4)
mtext("Std. Abundance", side = 2, line=2.4)
abline(h=1, lty=2)
abline(h=0, v=0, lty=3)
plot(d$Std_Volume, sm_full$smap_coefficients[[1]][-1,3], xlab = "", ylab = "")
mtext("Std. Abundance", side = 1, line=2.4)
mtext(expression(paste(italic(X)[italic(t),"1"])), side = 2, line=2.4)
x = d$Day
tmp2 = sm_full$smap_coefficients[[1]][-1,3]
mod = loess(tmp2~tmp1, enp.target = 0.5)
lines(tmp1, predict(mod), lwd=2)
abline(h=0, v=0, lty=3)
abline(v = 1, lty=2)
dev.off()
plot(d$Std_Volume, sm_full$smap_coefficients[[1]][-1,3], xlab = "", ylab = "")
mtext("Std. Abundance", side = 1, line=2.4)
mtext(expression(paste(italic(X)[italic(t),"1"])), side = 2, line=2.4)
x = d$Day
tmp2 = sm_full$smap_coefficients[[1]][-1,3]
mtext(expression(paste(italic(X)[italic(t)",1"])), side = 2, line=2.4)
mtext(expression(paste(italic(X)[italic(t),",1"])), side = 2, line=2.4)
mtext(expression(paste(italic(X)[paste(italic(t),",1")])), side = 2, line=2.4)
require(gauseR)
require(rEDM)
data(gause_1934_science_f02_03)
d = gause_1934_science_f02_03[gause_1934_science_f02_03$Treatment=="Pa",]
d = d[,c("Day", "Volume_Species2")]
d[,2] = d[,2]/mean(d[,2])/1.45
colnames(d) = c("Day", "Std_Volume")
sm = s_map(d$Std_Volume, E=1)
#plot(sm$theta, sm$rho)
theta = 3# sm$theta[which.max(sm$rho)]
sm_full = s_map(d$Std_Volume, E=1, theta = theta, save_smap_coefficients = TRUE, stats_only = FALSE)
png("~/Dropbox/Projects/085_ERC_SG/noodling/b2/edm_example.png", width=3, height=4, units = "in", res = 200)
par(mfrow=c(2,1), mar=c(4,4,.5,.5))
plot(d$Day, d$Std_Volume, xlab = "", ylab = "")
tmp1 = c(d$Std_Volume[1],sm_full$model_output[[1]]$Predictions[-c(1, length(sm_full$model_output[[1]]$Predictions))])
sdt = c(0,sqrt(sm_full$model_output[[1]]$Pred_Variance[-c(1, length(sm_full$model_output[[1]]$Predictions))]))
polygon(c(d$Day, rev(d$Day)),
pmax(0, c(tmp1+sdt, rev(tmp1-sdt))), border = NA, col=adjustcolor(1, 0.5))
lines(d$Day, tmp1, lwd=2)
mtext("Time (Days)", side = 1, line=2.4)
mtext("Std. Abundance", side = 2, line=2.4)
abline(h=1, lty=2)
abline(h=0, v=0, lty=3)
plot(d$Std_Volume, sm_full$smap_coefficients[[1]][-1,3], xlab = "", ylab = "")
mtext("Std. Abundance", side = 1, line=2.4)
mtext(expression(paste(italic(X)[paste(italic(t),",1")])), side = 2, line=2.4)
x = d$Day
tmp2 = sm_full$smap_coefficients[[1]][-1,3]
mod = loess(tmp2~tmp1, enp.target = 0.5)
lines(tmp1, predict(mod), lwd=2)
abline(h=0, v=0, lty=3)
abline(v = 1, lty=2)
dev.off()
require(gauseR)
require(rEDM)
data(gause_1934_science_f02_03)
d = gause_1934_science_f02_03[gause_1934_science_f02_03$Treatment=="Pa",]
d = d[,c("Day", "Volume_Species2")]
d[,2] = d[,2]/mean(d[,2])/1.45
colnames(d) = c("Day", "Std_Volume")
sm = s_map(d$Std_Volume, E=1)
#plot(sm$theta, sm$rho)
theta = 3# sm$theta[which.max(sm$rho)]
sm_full = s_map(d$Std_Volume, E=1, theta = theta, save_smap_coefficients = TRUE, stats_only = FALSE)
png("~/Dropbox/Projects/085_ERC_SG/noodling/b2/edm_example.png", width=3, height=4, units = "in", res = 200)
par(mfrow=c(2,1), mar=c(4,4,.5,.5))
plot(d$Day, d$Std_Volume, xlab = "", ylab = "")
tmp1 = c(d$Std_Volume[1],sm_full$model_output[[1]]$Predictions[-c(1, length(sm_full$model_output[[1]]$Predictions))])
sdt = c(0,sqrt(sm_full$model_output[[1]]$Pred_Variance[-c(1, length(sm_full$model_output[[1]]$Predictions))]))
polygon(c(d$Day, rev(d$Day)),
pmax(0, c(tmp1+sdt, rev(tmp1-sdt))), border = NA, col=adjustcolor(1, 0.5))
lines(d$Day, tmp1, lwd=2)
mtext("Time (Days)", side = 1, line=2.4)
mtext("Std. Abundance", side = 2, line=2.4)
abline(h=1, lty=2)
abline(h=0, v=0, lty=3)
title("a.", line=0.8, xpd=NA, adj=0.02, cex.main=1.1)
plot(d$Std_Volume, sm_full$smap_coefficients[[1]][-1,3], xlab = "", ylab = "")
mtext("Std. Abundance", side = 1, line=2.4)
mtext(expression(paste(italic(X)[paste(italic(t),",1")])), side = 2, line=2.4)
x = d$Day
tmp2 = sm_full$smap_coefficients[[1]][-1,3]
mod = loess(tmp2~tmp1, enp.target = 0.5)
lines(tmp1, predict(mod), lwd=2)
abline(h=0, v=0, lty=3)
abline(v = 1, lty=2)
title("b.", line=0.8, xpd=NA, adj=0.02, cex.main=1.1)
dev.off()
require(gauseR)
require(rEDM)
data(gause_1934_science_f02_03)
d = gause_1934_science_f02_03[gause_1934_science_f02_03$Treatment=="Pa",]
d = d[,c("Day", "Volume_Species2")]
d[,2] = d[,2]/mean(d[,2])/1.45
colnames(d) = c("Day", "Std_Volume")
sm = s_map(d$Std_Volume, E=1)
#plot(sm$theta, sm$rho)
theta = 3# sm$theta[which.max(sm$rho)]
sm_full = s_map(d$Std_Volume, E=1, theta = theta, save_smap_coefficients = TRUE, stats_only = FALSE)
png("~/Dropbox/Projects/085_ERC_SG/noodling/b2/edm_example.png", width=3, height=4, units = "in", res = 200)
par(mfrow=c(2,1), mar=c(4,4,.5,.5), oma=c(0,0,0.5,0))
plot(d$Day, d$Std_Volume, xlab = "", ylab = "")
tmp1 = c(d$Std_Volume[1],sm_full$model_output[[1]]$Predictions[-c(1, length(sm_full$model_output[[1]]$Predictions))])
sdt = c(0,sqrt(sm_full$model_output[[1]]$Pred_Variance[-c(1, length(sm_full$model_output[[1]]$Predictions))]))
polygon(c(d$Day, rev(d$Day)),
pmax(0, c(tmp1+sdt, rev(tmp1-sdt))), border = NA, col=adjustcolor(1, 0.5))
lines(d$Day, tmp1, lwd=2)
mtext("Time (Days)", side = 1, line=2.4)
mtext("Std. Abundance", side = 2, line=2.4)
abline(h=1, lty=2)
abline(h=0, v=0, lty=3)
title("a.", line=0.2, xpd=NA, adj=0.02, cex.main=1.0)
plot(d$Std_Volume, sm_full$smap_coefficients[[1]][-1,3], xlab = "", ylab = "")
mtext("Std. Abundance", side = 1, line=2.4)
mtext(expression(paste(italic(X)[paste(italic(t),",1")])), side = 2, line=2.4)
x = d$Day
tmp2 = sm_full$smap_coefficients[[1]][-1,3]
mod = loess(tmp2~tmp1, enp.target = 0.5)
lines(tmp1, predict(mod), lwd=2)
abline(h=0, v=0, lty=3)
abline(v = 1, lty=2)
title("b.", line=0.2, xpd=NA, adj=0.02, cex.main=1.0)
dev.off()
headgause_1934_science_f02_03
head(v)
head(gause_1934_science_f02_03)
require(gauseR)
require(rEDM)
data(gause_1934_science_f02_03)
d = gause_1934_science_f02_03[gause_1934_science_f02_03$Treatment=="Pa",]
d = d[,c("Day", "Volume_Species2")]
d[,2] = d[,2]/mean(d[,2])/1.45
colnames(d) = c("Day", "Std_Volume")
sm = s_map(d$Std_Volume, E=1)
#plot(sm$theta, sm$rho)
theta = 3# sm$theta[which.max(sm$rho)]
sm_full = s_map(d$Std_Volume, E=1, theta = theta, save_smap_coefficients = TRUE, stats_only = FALSE)
png("~/Dropbox/Projects/085_ERC_SG/noodling/b2/edm_example.png", width=3, height=4, units = "in", res = 200)
par(mfrow=c(2,1), mar=c(4,4,.5,.5), oma=c(0,0,0.5,0))
plot(d$Day, d$Std_Volume, xlab = "", ylab = "")
tmp1 = c(d$Std_Volume[1],sm_full$model_output[[1]]$Predictions[-c(1, length(sm_full$model_output[[1]]$Predictions))])
sdt = c(0,sqrt(sm_full$model_output[[1]]$Pred_Variance[-c(1, length(sm_full$model_output[[1]]$Predictions))]))
polygon(c(d$Day, rev(d$Day)),
pmax(0, c(tmp1+sdt, rev(tmp1-sdt))), border = NA, col=adjustcolor(1, 0.5))
lines(d$Day, tmp1, lwd=2)
mtext("Time (Days)", side = 1, line=2.4)
mtext("Std. Abundance", side = 2, line=2.4)
abline(h=1, lty=2)
abline(h=0, v=0, lty=3)
title("a.", line=0.2, xpd=NA, adj=0.02, cex.main=1.0)
plot(d$Std_Volume, sm_full$smap_coefficients[[1]][-1,3], xlab = "", ylab = "")
mtext("Std. Abundance", side = 1, line=2.4)
mtext(expression(paste(italic(C)[paste(italic(t),",1")])), side = 2, line=2.4)
x = d$Day
tmp2 = sm_full$smap_coefficients[[1]][-1,3]
mod = loess(tmp2~tmp1, enp.target = 0.5)
lines(tmp1, predict(mod), lwd=2)
abline(h=0, v=0, lty=3)
abline(v = 1, lty=2)
title("b.", line=0.2, xpd=NA, adj=0.02, cex.main=1.0)
dev.off()
1/.85*400
setwd("~/Dropbox/Projects/041_Powerscaling_stability/src/pts_r_package/pttstability/")
install.packages("../pttstability_1.0.tar.gz", type = "source", repos = NULL)
